# Multi-stage build for HD-Compute-Toolkit Quantum Task Planner
# Production-ready container with quantum-inspired task planning capabilities

# Build stage
FROM python:3.11-slim as builder

# Set build arguments
ARG BUILD_VERSION=1.0.0
ARG BUILD_DATE
ARG VCS_REF

# Set labels
LABEL maintainer="Terragon Labs <terragon@example.com>" \
      org.label-schema.build-date=$BUILD_DATE \
      org.label-schema.name="hd-compute-toolkit" \
      org.label-schema.description="Quantum-Inspired Task Planning with Hyperdimensional Computing" \
      org.label-schema.version=$BUILD_VERSION \
      org.label-schema.vcs-ref=$VCS_REF \
      org.label-schema.vcs-url="https://github.com/danieleschmidt/quantum-inspired-task-planner" \
      org.label-schema.schema-version="1.0"

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    libopenblas-dev \
    liblapack-dev \
    libffi-dev \
    libssl-dev \
    pkg-config \
    && rm -rf /var/lib/apt/lists/*

# Create application directory
WORKDIR /build

# Copy dependency files
COPY pyproject.toml README.md ./
COPY hd_compute/ ./hd_compute/

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -e .[dev,docs] && \
    pip install --no-cache-dir gunicorn uvicorn[standard] prometheus-client

# Production stage  
FROM python:3.11-slim as production

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    libopenblas0 \
    liblapack3 \
    curl \
    procps \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create non-root user
RUN groupadd -r quantumplanner && \
    useradd -r -g quantumplanner -s /bin/bash quantumplanner

# Set working directory
WORKDIR /app

# Copy built application from builder stage
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin
COPY --from=builder /build/hd_compute ./hd_compute

# Copy application files
COPY scripts/ ./scripts/
COPY config/ ./config/
COPY deploy/entrypoint.sh ./
COPY deploy/health-check.sh ./

# Create directories
RUN mkdir -p /app/logs /app/cache /app/data /app/tmp && \
    chown -R quantumplanner:quantumplanner /app && \
    chmod +x entrypoint.sh health-check.sh

# Set environment variables
ENV PYTHONPATH="/app:$PYTHONPATH" \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    QUANTUM_DIMENSION=10000 \
    QUANTUM_COHERENCE_THRESHOLD=0.7 \
    LOG_LEVEL=INFO \
    WORKER_THREADS=4 \
    CACHE_SIZE_MB=1024

# Expose ports
EXPOSE 8080 8081 9090

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD ./health-check.sh

# Switch to non-root user
USER quantumplanner

# Set entrypoint
ENTRYPOINT ["./entrypoint.sh"]

# Default command
CMD ["coordinator"]