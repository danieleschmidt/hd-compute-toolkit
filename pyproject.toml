[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "hd-compute-toolkit"
version = "0.1.0"
description = "High-performance hyperdimensional computing library for PyTorch and JAX"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Daniel Schmidt", email = "daniel@example.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.21.0",
    "torch>=1.12.0",
    "jax>=0.3.0",
    "jaxlib>=0.3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "pytest-benchmark>=4.0.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "flake8>=4.0.0",
    "flake8-docstrings>=1.6.0",
    "flake8-bugbear>=22.0.0",
    "mypy>=0.991",
    "pre-commit>=2.20.0",
    "bandit>=1.7.0",
    "safety>=2.0.0",
    "jupyterlab>=3.0.0",
    "ipywidgets>=8.0.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "wandb>=0.13.0",
    "tensorboard>=2.10.0",
]
fpga = [
    "pynq>=2.7.0",
]
vulkan = [
    "vulkan>=1.3.0",
    "compute-shader>=0.1.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/hd-compute-toolkit"
Repository = "https://github.com/yourusername/hd-compute-toolkit"
Documentation = "https://hd-compute-toolkit.readthedocs.io"
"Bug Reports" = "https://github.com/yourusername/hd-compute-toolkit/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["hd_compute*"]

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311"]

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "--cov=hd_compute --cov-report=html --cov-report=term-missing --cov-report=xml --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests that require GPU",
    "integration: marks tests as integration tests",
    "benchmark: marks tests as benchmarks",
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [".git", "__pycache__", "build", "dist", "*.egg-info"]
per-file-ignores = [
    "__init__.py:F401",
    "tests/*:D103",
]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]

[tool.coverage.run]
source = ["hd_compute"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/setup.py",
    "*/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[project.scripts]
hdc-benchmark = "hd_compute.cli:benchmark"
hdc-train = "hd_compute.cli:train"
hdc-eval = "hd_compute.cli:evaluate"